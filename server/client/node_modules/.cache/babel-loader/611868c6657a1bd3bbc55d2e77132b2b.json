{"ast":null,"code":"'use strict';\n/**\n * Wrap substitutions\n */\n\nmodule.exports = function wrap(substitutions) {\n  var left = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '{{';\n  var right = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '}}';\n\n  //Process arrays\n  if (Array.isArray(substitutions)) {\n    return substitutions.map(function (subs) {\n      return wrap(subs, left, right);\n    });\n  } //Initialize new wrapped object\n\n\n  var wrapped = {}; //Map substitutions and ensure string for value\n\n  for (var key in substitutions) {\n    //istanbul ignore else\n    if (substitutions.hasOwnProperty(key)) {\n      wrapped[left + key + right] = String(substitutions[key]);\n    }\n  } //Return wrapped substitutions\n\n\n  return wrapped;\n};","map":null,"metadata":{},"sourceType":"script"}