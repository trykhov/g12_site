{"ast":null,"code":"'use strict';\n/**\n * Dependencies\n */\n\nvar _slicedToArray = require(\"/Users/tryckhov/Dropbox/Programming/Web Development/React/g12-site/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/Users/tryckhov/Dropbox/Programming/Web Development/React/g12-site/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/tryckhov/Dropbox/Programming/Web Development/React/g12-site/node_modules/@babel/runtime/helpers/createClass\");\n\nvar splitNameEmail = require('../helpers/split-name-email');\n/**\n * Email address class\n */\n\n\nvar EmailAddress =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   */\n  function EmailAddress(data) {\n    _classCallCheck(this, EmailAddress);\n\n    //Construct from data\n    if (data) {\n      this.fromData(data);\n    }\n  }\n  /**\n   * From data\n   */\n\n\n  _createClass(EmailAddress, [{\n    key: \"fromData\",\n    value: function fromData(data) {\n      //String given\n      if (typeof data === 'string') {\n        var _splitNameEmail = splitNameEmail(data),\n            _splitNameEmail2 = _slicedToArray(_splitNameEmail, 2),\n            _name = _splitNameEmail2[0],\n            _email = _splitNameEmail2[1];\n\n        data = {\n          name: _name,\n          email: _email\n        };\n      } //Expecting object\n\n\n      if (typeof data !== 'object') {\n        throw new Error('Expecting object or string for EmailAddress data');\n      } //Extract name and email\n\n\n      var _data = data,\n          name = _data.name,\n          email = _data.email; //Set\n\n      this.setEmail(email);\n      this.setName(name);\n    }\n    /**\n     * Set name\n     */\n\n  }, {\n    key: \"setName\",\n    value: function setName(name) {\n      if (typeof name === 'undefined') {\n        return;\n      }\n\n      if (typeof name !== 'string') {\n        throw new Error('String expected for `name`');\n      }\n\n      this.name = name;\n    }\n    /**\n     * Set email (mandatory)\n     */\n\n  }, {\n    key: \"setEmail\",\n    value: function setEmail(email) {\n      if (typeof email === 'undefined') {\n        throw new Error('Must provide `email`');\n      }\n\n      if (typeof email !== 'string') {\n        throw new Error('String expected for `email`');\n      }\n\n      this.email = email;\n    }\n    /**\n     * To JSON\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      //Get properties\n      var email = this.email,\n          name = this.name; //Initialize with mandatory properties\n\n      var json = {\n        email: email\n      }; //Add name if present\n\n      if (name !== '') {\n        json.name = name;\n      } //Return\n\n\n      return json;\n    }\n    /**************************************************************************\n     * Static helpers\n     ***/\n\n    /**\n     * Create an EmailAddress instance from given data\n     */\n\n  }], [{\n    key: \"create\",\n    value: function create(data) {\n      var _this = this;\n\n      //Array?\n      if (Array.isArray(data)) {\n        return data.filter(function (item) {\n          return !!item;\n        }).map(function (item) {\n          return _this.create(item);\n        });\n      } //Already instance of EmailAddress class?\n\n\n      if (data instanceof EmailAddress) {\n        return data;\n      } //Create instance\n\n\n      return new EmailAddress(data);\n    }\n  }]);\n\n  return EmailAddress;\n}(); //Export class\n\n\nmodule.exports = EmailAddress;","map":null,"metadata":{},"sourceType":"script"}